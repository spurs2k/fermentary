@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap");

html,
body,
app-root {
    --yellow: #FCBD0B;
    --blue: #A5CBE1;
    --green: #018707;
    --black: #000000;
    --gray: #2e4756;
    --turquoise: #3cc4bf;
    --light-gray: #d3d3d3;
    background-color: var(--black);
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    list-style: none;
    font-family: "Montserrat", sans-serif;
    height: 100%;
}

.content-outer-container {
    margin-bottom: 0;
    margin-top: 0;
}

.content-inner-container {
    padding: 50px;
}

/* Shared utility classes */
button:hover {
    cursor: pointer;
    opacity: 90%;
}

.hidden {
    display: none !important;
}

.shadow {
    box-shadow: var(--turquoise) 0px 2px 4px,
        var(--light-gray) 0px 7px 13px -3px;
}

/* grid templates allow me to set padding for repeated rows and columns. Gap adds padding to all grid items */
.grid {
    display: grid;
    grid-template-columns: repeat(2, 150px);
    grid-template-rows: repeat(3, 150px);
    gap: 20px;
}

/* settings for smaller screens such as tablets and phones */
@media (max-width: 768px) {
    .grid {
        width: 490px;
        grid-template-columns: repeat(2, 100px);
        grid-template-rows: repeat(3, 100px);
        gap: 20px;
        justify-content: center;

    }
}

/* Using flex I am able to move the grid into the center of the screen by changing flex-direction to column, and centering the justify-content and align-items. */
.gridContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.square {
    background-color: var(--gray);
    border-radius: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.square:hover {
    cursor: pointer;
    opacity: 90%;
}

